#!/usr/bin/env node
/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */

// jshint node: true
'use strict';

var path = require('path');
var fs = require('fs');

var dom5 = require('dom5');
var pred = dom5.predicates;

var inlineScriptFinder = pred.AND(
  pred.hasTagName('script'),
  pred.OR(
    pred.NOT(
      pred.hasAttr('type')
    ),
    pred.hasAttrValue('type', 'application/javascript'),
    pred.hasAttrValue('type', 'text/javascript')
  ),
  pred.NOT(
    pred.hasAttr('src')
  )
);

var outhtml = path.resolve(process.argv[2]);
var outscript = path.resolve(process.argv[3]);

if (!outhtml) {
  console.log('Missing output html file!');
  process.exit(1);
}

if (!outscript) {
  console.log('Missing output js file!');
  process.exit(1);
}

var docText = '';
process.stdin.setEncoding('utf-8');
process.stdin.on('readable', function() {
  var chunk = process.stdin.read();
  if (chunk !== null) {
    docText += chunk;
  }
});
process.stdin.on('end', function() {
  var doc = dom5.parse(docText);
  var head = dom5.query(doc, pred.hasTagName('head'));
  var body = dom5.query(doc, pred.hasTagName('body'));
  var scripts = dom5.queryAll(doc, inlineScriptFinder);

  var contents = [];
  scripts.forEach(function(sn) {
    dom5.remove(sn);
    contents.push(dom5.getTextContent(sn));
  });

  var newScript = dom5.constructors.element('script');
  dom5.setAttribute(newScript, 'src', path.relative(path.dirname(outhtml), outscript));
  dom5.append(body, newScript);

  fs.writeFileSync(outhtml, dom5.serialize(doc), 'utf-8');
  fs.writeFileSync(outscript, contents.join(';'), 'utf-8');
});

